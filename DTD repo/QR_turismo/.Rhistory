dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(!intersects == "TRUE", sociedad == "FALSE") %>%
dplyr::ungroup(),
radius = 5,
color = ~colorNumeric(palette = c("gold", "orange", "red", "brown"), domain = places_list_sf$dist)(dist),  # Conditional color based on 'intersect'
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
)  %>%
addCircleMarkers(
data = places_list_sf %>%
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(!intersects == "TRUE", sociedad == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = "blue",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
)
check_point_intersections(geompoints = places_list_sf, buffers = locaciones_restringidas, radius = 10)
for (x in c(4, 5, 6, 11, 12, 14, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45)) {
sociedad <- get_arcgis_services(service = "Sociedad_público", layer = x, return_geojson = TRUE)[, "geometry"]
sociedad$name <- get_arcgis_services(service = "Sociedad_público")[x, ]$name
# Check if the sociedad shapefile has a CRS, if not, assign WGS 84 (EPSG:4326)
if (is.na(st_crs(sociedad))) {
st_crs(sociedad) <- st_crs(4326)
}
if (!exists("locaciones_restringidas")) {
locaciones_restringidas <- sociedad
} else {
locaciones_restringidas <- rbind(locaciones_restringidas, sociedad)
}
}
locaciones_restringidas
locaciones_restringidas$segunda_sec <- check_point_intersections(geompoints = locaciones_restringidas, buffers = secciones)
locaciones_restringidas <- locaciones_restringidas %>% dplyr::filter(segunda_sec == "TRUE")
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
) %>%
addPolygons(
data = propiedad_horizontal,
color = "grey",
weight = 2,
fillOpacity = 0
) %>%
addCircleMarkers(
data = places_list_sf %>%
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(intersects == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = ~"green",  # Conditional color based on 'intersect'
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = places_list_sf %>%
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(!intersects == "TRUE", sociedad == "FALSE") %>%
dplyr::ungroup(),
radius = 5,
color = ~colorNumeric(palette = c("gold", "orange", "red", "brown"), domain = places_list_sf$dist)(dist),  # Conditional color based on 'intersect'
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
)  %>%
addCircleMarkers(
data = places_list_sf %>%
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(!intersects == "TRUE", sociedad == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = "blue",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
)
# Columna para indicar si tiene una locación restringida a 10 metros (solo se muestran ubicaciones de googlemaps gastronómicas)
places_list_sf$sociedad <- check_point_intersections(geompoints = places_list_sf, buffers = locaciones_restringidas, radius = 10)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
) %>%
addPolygons(
data = propiedad_horizontal,
color = "grey",
weight = 2,
fillOpacity = 0
) %>%
addCircleMarkers(
data = places_list_sf %>%
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(intersects == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = ~"green",  # Conditional color based on 'intersect'
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = places_list_sf %>%
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(!intersects == "TRUE", sociedad == "FALSE") %>%
dplyr::ungroup(),
radius = 5,
color = ~colorNumeric(palette = c("gold", "orange", "red", "brown"), domain = places_list_sf$dist)(dist),  # Conditional color based on 'intersect'
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
)  %>%
addCircleMarkers(
data = places_list_sf %>%
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(!intersects == "TRUE", sociedad == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = "blue",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
)
places_list_sf %>%
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(intersects == "TRUE") %>%
dplyr::ungroup()
locaciones_restringidas
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
)
%>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
)
%>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
)
%>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
)
%>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
)
%>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
)
%>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
) %>%
addPolygons(
data = propiedad_horizontal,
color = "grey",
weight = 2,
fillOpacity = 0
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
) %>%
addPolygons(
data = propiedad_horizontal,
color = "grey",
weight = 2,
fillOpacity = 0
) %>%
addCircleMarkers(
data = places_list_sf %>% # Places cercanos a un lugar restringido
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(!intersects == "TRUE", sociedad == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = "blue",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = locaciones_restringidas,
radius = 5,
color = "magenta",
fillOpacity = 0.1,
stroke = FALSE
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
) %>%
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places cercanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(intersects == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~"green",  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   )
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places lejanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(intersects == "FALSE", sociedad == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~colorNumeric(palette = c("gold", "orange", "red", "brown"), domain = places_list_sf$dist)(dist),  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   ) %>%
addCircleMarkers(
data = places_list_sf %>% # Places cercanos a un lugar restringido
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(!intersects == "TRUE", sociedad == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = "blue",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = locaciones_restringidas,
radius = 5,
color = "magenta",
fillOpacity = 0.1,
stroke = FALSE
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
) %>%
addPolygons(
data = propiedad_horizontal,
color = "grey",
weight = 2,
fillOpacity = 0
) %>%
addCircleMarkers(
data = places_list_sf %>% # Places cercanos a un lugar restringido
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(!intersects == "TRUE", sociedad == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = "blue",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = locaciones_restringidas,
radius = 5,
color = "magenta",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~name
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
) %>%
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places cercanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(intersects == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~"green",  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   )
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places lejanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(intersects == "FALSE", sociedad == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~colorNumeric(palette = c("gold", "orange", "red", "brown"), domain = places_list_sf$dist)(dist),  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   ) %>%
addCircleMarkers(
data = places_list_sf %>% # Places cercanos a un lugar restringido
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(!intersects == "TRUE", sociedad == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = "blue",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = locaciones_restringidas,
radius = 5,
color = "magenta",
fillOpacity = 0.1,
stroke = FALSE
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
)
