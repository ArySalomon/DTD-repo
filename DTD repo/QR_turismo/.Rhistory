data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
) %>%
addPolygons(
data = parcelas,
color = "grey",
weight = 2,
fillOpacity = 0
) %>%
addCircleMarkers(
data = places_list_sf %>% # Places cercanos a un lugar restringido NO GASTRONOMICOS (en azul los que zafan de la clasificaci贸n en "sociedad_clean")
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(sin_cuenta == "TRUE", sociedad_clean == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = "blue",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
) %>%
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places cercanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(sin_cuenta == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~"green",  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   )
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places lejanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(sin_cuenta == "FALSE", sociedad == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~colorNumeric(palette = c("gold", "orange", "red", "brown"), domain = places_list_sf$dist)(dist),  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   ) %>%
addPolygons(
data = locaciones_restringidas,
color = "magenta",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0(tipo, ": ", nombre)
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
) %>%
addPolygons(
data = parcelas,
color = "grey",
weight = 2,
fillOpacity = 0
) %>%
addCircleMarkers(
data = places_list_sf %>% # Places cercanos a un lugar restringido NO GASTRONOMICOS (en azul los que zafan de la clasificaci贸n en "sociedad_clean")
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(sin_cuenta == "TRUE", sociedad_clean == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = "blue",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
) %>%
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places cercanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(sin_cuenta == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~"green",  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   )
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places lejanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(sin_cuenta == "FALSE", sociedad == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~colorNumeric(palette = c("gold", "orange", "red", "brown"), domain = places_list_sf$dist)(dist),  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   ) %>%
addPolygons(
data = locaciones_restringidas,
color = "magenta",
fillOpacity = 1
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
)
locaciones_restringidas
locaciones_restringidas <- backup
locaciones_restringidas
parcelas
parcelas[st_intersects(parcelas, locaciones_restringidas, sparse = FALSE), ]
st_intersects(parcelas, locaciones_restringidas, sparse = FALSE) %>% apply(1, any)
# backup <- locaciones_restringidas
parcelas$intersects <- st_intersects(parcelas, locaciones_restringidas, sparse = FALSE) %>% apply(1, any)
parcelas$intersects
# backup <- locaciones_restringidas
parcelas$restringidas <- st_intersects(parcelas, locaciones_restringidas, sparse = FALSE) %>% apply(1, any)
parcelas$restringidas
which(parcelas$restringidas == "TRUE")
parcelas[which(parcelas$restringidas == "TRUE"), ]
st_intersection(parcelas[which(parcelas$restringidas == "TRUE"), ], places_list_sf, sparse = FALSE)
st_intersection(parcelas[which(parcelas$restringidas == "TRUE"), ], places_list_sf)
st_intersection(parcelas[which(parcelas$restringidas == "TRUE"), ], places_list_sf) %>% apply(1, any)
st_intersection(parcelas[which(parcelas$restringidas == "TRUE"), ], places_list_sf, sparse = FALSE) %>% apply(1, any)
st_intersection(parcelas[which(parcelas$restringidas == "TRUE"), ], places_list_sf, sparse = FALSE) %>% apply(1, any)
st_intersects(filtered_parcelas, places_list_sf, sparse = FALSE) %>% apply(1, any) %>% View()
st_intersects(parcelas[which(parcelas$restringidas == "TRUE"), ], places_list_sf) %>% apply(1, any) %>% View()
parcelas[which(parcelas$restringidas == "TRUE"), ]
st_intersects(parcelas[which(parcelas$restringidas == "TRUE"), ], places_list_sf)y) %>% View()
st_intersects(parcelas[which(parcelas$restringidas == "TRUE"), ], places_list_sf) %>% View()
st_intersects(parcelas[which(parcelas$restringidas == "TRUE"), ], places_list_sf)
parcelas %>%
dplyr::filter(isTRUE(restringidas)
parcelas %>%
parcelas %>%
dplyr::filter(isTRUE(restringidas))
parcelas
parcelas %>%
dplyr::filter(restringidas == "TRUE")
st_intersects(parcelas %>%
dplyr::filter(restringidas == "TRUE"), places_list_sf)
st_intersection(parcelas[which(parcelas$restringidas == "TRUE"), ], places_list_sf)
st_intersection(parcelas %>%
dplyr::filter(restringidas == "TRUE"), places_list_sf)
st_intersection(parcelas %>%
dplyr::filter(restringidas == "TRUE"), places_list_sf) %>% View()
st_intersection(parcelas %>%
dplyr::filter(restringidas == "TRUE"), places_list_sf) %>% apply(1, any)
st_intersects(parcelas %>%
dplyr::filter(restringidas == "TRUE"),
locaciones_restringidas, sparse = FALSE) %>% apply(1, any)
st_intersects(parcelas %>%
dplyr::filter(restringidas == "TRUE"),
places_list_sf, sparse = FALSE) %>% apply(1, any)
st_intersects(places_list_sf, parcelas %>%
dplyr::filter(restringidas == "TRUE"),sparse = FALSE) %>% apply(1, any)
backup <- places_list_sf
places_list_sf$sociedad <- st_intersects(places_list_sf, parcelas %>%
dplyr::filter(restringidas == "TRUE"),sparse = FALSE) %>% apply(1, any)
places_list_sf <- places_list_sf %>% # solo los que interseccionan con sociedad y NO son gastron贸micos, se marcan TRUE en "sociedad_clean"
dplyr::mutate(
gastronomico = str_detect(types, regex("food|restaurant|bar", ignore_case = TRUE)),
sociedad_clean = ifelse(sociedad == "TRUE" & gastronomico == "FALSE", "TRUE",
ifelse(sociedad == "TRUE" & gastronomico == "TRUE", "FALSE", "FALSE")
)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
) %>%
addPolygons(
data = parcelas,
color = "grey",
weight = 2,
fillOpacity = 0
) %>%
addCircleMarkers(
data = places_list_sf %>% # Places cercanos a un lugar restringido NO GASTRONOMICOS (en azul los que zafan de la clasificaci贸n en "sociedad_clean")
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(sin_cuenta == "TRUE", sociedad_clean == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = "blue",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
) %>%
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places cercanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(sin_cuenta == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~"green",  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   )
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places lejanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(sin_cuenta == "FALSE", sociedad == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~colorNumeric(palette = c("gold", "orange", "red", "brown"), domain = places_list_sf$dist)(dist),  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   ) %>%
addCircleMarkers(
data = locaciones_restringidas,
radius = 5,
color = "magenta",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0(tipo, ": ", nombre)
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
)
places_list_sf %>% # Places cercanos a un lugar restringido NO GASTRONOMICOS (en azul los que zafan de la clasificaci贸n en "sociedad_clean")
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(
!(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
!any(str_detect(types, regex("store", ignore_case = TRUE))))
) %>%
dplyr::filter(sin_cuenta == "TRUE", sociedad_clean == "TRUE") %>%
dplyr::ungroup() %>% View()
places_list_sf %>% # Places cercanos a un lugar restringido NO GASTRONOMICOS (en azul los que zafan de la clasificaci贸n en "sociedad_clean")
dplyr::filter(user_ratings_total > 3) %>%
dplyr::rowwise() %>%
dplyr::filter(sin_cuenta == "TRUE", sociedad_clean == "TRUE") %>%
dplyr::ungroup() %>% View()
places_list_sf %>% # Places cercanos a un lugar restringido NO GASTRONOMICOS (en azul los que zafan de la clasificaci贸n en "sociedad_clean")
dplyr::rowwise() %>%
dplyr::filter(sin_cuenta == "TRUE", sociedad_clean == "TRUE") %>%
dplyr::ungroup() %>% View()
places_list_sf %>% # Places cercanos a un lugar restringido NO GASTRONOMICOS (en azul los que zafan de la clasificaci贸n en "sociedad_clean")
dplyr::filter(sin_cuenta == "TRUE", sociedad_clean == "TRUE") %>%
dplyr::ungroup() %>% View()
leaflet() %>%
leaflet() %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
) %>%
addPolygons(
data = parcelas,
color = "grey",
weight = 2,
fillOpacity = 0
) %>%
addCircleMarkers(
data = places_list_sf %>% # Places cercanos a un lugar restringido NO GASTRONOMICOS (en azul los que zafan de la clasificaci贸n en "sociedad_clean")
dplyr::filter(sin_cuenta == "TRUE", sociedad_clean == "TRUE") %>%
dplyr::ungroup() %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
) %>%
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places cercanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(sin_cuenta == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~"green",  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   )
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places lejanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(sin_cuenta == "FALSE", sociedad == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~colorNumeric(palette = c("gold", "orange", "red", "brown"), domain = places_list_sf$dist)(dist),  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   ) %>%
addCircleMarkers(
data = locaciones_restringidas,
radius = 5,
color = "magenta",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0(tipo, ": ", nombre)
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
)
##
print("aa")
##
print("aa")
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = manzanas_sf,
color = ~colorFactor(palette = "Set1", domain = manzanas_sf$objectid_1)(objectid_1),
weight = 2,
fillOpacity = 0.1
) %>%
addPolygons(
data = parcelas,
color = "grey",
weight = 2,
fillOpacity = 0
) %>%
addCircleMarkers(
data = places_list_sf %>% # Places cercanos a un lugar restringido NO GASTRONOMICOS (en azul los que zafan de la clasificaci贸n en "sociedad_clean")
dplyr::filter(sin_cuenta == "TRUE", sociedad_clean == "TRUE") %>%
dplyr::ungroup(),
radius = 5,
color = "blue",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
) %>%
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places cercanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(sin_cuenta == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~"green",  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   )
# %>%
#   addCircleMarkers(
#     data = places_list_sf %>% # Places lejanos a una cuenta comercial
#       dplyr::filter(user_ratings_total > 3) %>%
#       dplyr::rowwise() %>%
#       dplyr::filter(
#         !(any(str_detect(types, regex("tourist_attraction|park|local_government_office|museum|school|church|place_of_worship", ignore_case = TRUE))) &
#             !any(str_detect(types, regex("store", ignore_case = TRUE))))
#       ) %>%
#       dplyr::filter(sin_cuenta == "FALSE", sociedad == "TRUE") %>%
#       dplyr::ungroup(),
#     radius = 5,
#     color = ~colorNumeric(palette = c("gold", "orange", "red", "brown"), domain = places_list_sf$dist)(dist),  # Conditional color based on 'intersect'
#     fillOpacity = 1,
#     stroke = FALSE,
#     popup = ~paste0("<strong>", name, "</strong><br><a href='", url_maps, "' target='_blank'>", url_maps, "</a>")
#   ) %>%
addCircleMarkers(
data = locaciones_restringidas,
radius = 5,
color = "magenta",
fillOpacity = 1,
stroke = FALSE,
popup = ~paste0(tipo, ": ", nombre)
) %>%
addCircleMarkers(
data = comercio_sf,
radius = 5,
color = "grey",
fillOpacity = 0.1,
stroke = FALSE,
popup = ~nombre_fantasia
)
save.image(file = "googlemaps_request.RData")
library(tidyr)
library(leaflet)
library(stringr)
library(purrr)
library(httr)
library(jsonlite)
library(sf)
library(plotly)
library(RColorBrewer)
